import com.github.zafarkhaja.semver.Version
import java.util.regex.Matcher
import static String.format


plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.5.0'
}


scmVersion {
	tag { prefix = 'iet-inspec-rsuite-plugin' }

	branchVersionIncrementer = [ 
        'master.*' : "incrementMinor",
        'release.*' : { context -> if (context.currentVersion.preReleaseVersion) {
            Matcher matcher = context.currentVersion.preReleaseVersion =~ /^(.*?)(\d+)$/
            if (matcher.matches()) {
                long nextNumber = Long.parseLong(matcher.group(2)) + 1 
                String nextNumberPadded = format("%0" + matcher.group(2).length() + "d", nextNumber);
                String nextPreReleaseVersion = matcher.group(1) + nextNumberPadded

                return new Version.Builder()
                        .setNormalVersion(context.currentVersion.normalVersion)
                        .setPreReleaseVersion(nextPreReleaseVersion)
                        .build();
            }   
        }   
        return context.currentVersion.incrementMinorVersion() 

        },  

        'hofix.*' : "incrementPatch",
        'development.*' : "incrementMinor"
	]

	repository {
		customKey = project.file(ietReleaseKeyFile)
	}
}

project.version = scmVersion.version
//project.version = scmVersion.version



task('promoteReleaseCandidate') {
    doLast {
        def version = scmVersion.version
        version = ""+ version.replaceFirst("^([0-9]+\\.[0-9]+\\.[0-9]+).*", '$'+"1")
        project.ext.set("release.forceVersion", version)
        tasks.release.execute()
    }
}

task('createReleaseCandidate') {
    doLast {
        def version = scmVersion.version
        version = version.replaceFirst("^([0-9]+\\.[0-9]+\\.[0-9]+).*", '$'+"1") + "-rc1"
        project.ext.set("release.forceVersion", version)
        tasks.release.execute()
    }
}
